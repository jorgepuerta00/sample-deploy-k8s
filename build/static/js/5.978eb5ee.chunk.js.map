{"version":3,"sources":["Views/IndexSections/Input.tsx","Views/Containers/Login.tsx"],"names":["Input","type","name","placeholder","errors","validation","aria-hidden","aria-invalid","id","ref","role","Login","props","useForm","register","handleSubmit","useSignIn","loading","token","user","error","firebaseSignIn","React","useEffect","setUserSession","history","push","onSubmit","data","Email","Password","required","pattern","maxLength","value","disabled"],"mappings":"+HAiDeA,IAvCsB,SAAC,GAM/B,IALLC,EAKI,EALJA,KACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,OACAC,EACI,EADJA,WAGA,OACE,qCACE,uBACEJ,KAAMA,EACNK,cAAY,OACZC,eAAcH,EAAOF,GAAQ,OAAS,QACtCC,YAAaA,EACbK,GAAIN,EACJA,KAAMA,EACNO,IAAKJ,IAEND,EAAOF,IAA+B,aAAtBE,EAAOF,GAAMD,MAC5B,sBAAMS,KAAK,QAAX,8BAEDN,EAAOF,IAA+B,cAAtBE,EAAOF,GAAMD,MAC5B,sBAAMS,KAAK,QAAX,iCAEDN,EAAOF,IAA+B,QAAtBE,EAAOF,GAAMD,MAC5B,sBAAMS,KAAK,QAAX,uCAEDN,EAAOF,IAA+B,QAAtBE,EAAOF,GAAMD,MAC5B,sBAAMS,KAAK,QAAX,sCAEDN,EAAOF,IAA+B,YAAtBE,EAAOF,GAAMD,MAC5B,sBAAMS,KAAK,QAAX,mCAEF,uBAAM,4B,yGCHGC,UA7Bf,SAAeC,GAAa,IAAD,EAEkBC,cAAnCC,EAFiB,EAEjBA,SAAUC,EAFO,EAEPA,aAAcX,EAFP,EAEOA,OAFP,EAG+BY,cAH/B,mBAGjBC,EAHiB,KAGRC,EAHQ,KAGDC,EAHC,KAGKC,EAHL,KAGYC,EAHZ,KAkBzB,OAPAC,IAAMC,WAAU,WACVN,GAAqB,KAAVG,IACbI,YAAeN,EAAOC,GACtBP,EAAMa,QAAQC,KAAK,iBAEpB,CAACT,EAASG,EAAOF,EAAOC,EAAMP,EAAMa,UAGrC,uBAAME,SAAUZ,GAbD,SAACa,GAChBP,EAAeO,EAAKC,MAAOD,EAAKE,aAYhC,UACE,0CADF,IACqB,uBACnB,cAAC,IAAD,CAAO7B,KAAK,OAAOE,YAAY,QAAQD,KAAK,QAAQG,WAAYS,EAAS,CAACiB,UAAU,EAAMC,QAAS,uCAAwC5B,OAAQA,IACnJ,cAAC,IAAD,CAAOH,KAAK,WAAWE,YAAY,WAAWD,KAAK,WAAWG,WAAYS,EAAS,CAACiB,UAAU,EAAME,UAAW,KAAM7B,OAAQA,IAC7H,uBAAOH,KAAK,SAASiC,MAAOjB,EAAU,aAAe,QAASkB,SAAUlB,IAAW,uBAClFG,GAAS,qCAAE,uBAAM,gCAAQA,IAAc,0BAAU","file":"static/js/5.978eb5ee.chunk.js","sourcesContent":["import React from \"react\";\n\nexport interface IInputProps {\n  type: any,\n  name: any,\n  placeholder?: any,\n  errors: any,\n  validation: any\n}\n\nconst Input: React.FC<IInputProps> = ({\n  type,\n  name,\n  placeholder,\n  errors,\n  validation\n}) => {\n\n  return (\n    <>\n      <input \n        type={type}\n        aria-hidden=\"true\"\n        aria-invalid={errors[name] ? \"true\" : \"false\"} \n        placeholder={placeholder}\n        id={name}\n        name={name}\n        ref={validation} \n      /> \n      {errors[name] && errors[name].type === \"required\" && (\n        <span role=\"alert\">This is required</span>\n      )}\n      {errors[name] && errors[name].type === \"maxLength\" && (\n        <span role=\"alert\">Max length exceeded</span>\n      )}\n      {errors[name] && errors[name].type === \"min\" && (\n        <span role=\"alert\">Should be greatter than 0</span>\n      )}\n      {errors[name] && errors[name].type === \"max\" && (\n        <span role=\"alert\">Should be lower than 100</span>\n      )}\n      {errors[name] && errors[name].type === \"pattern\" && (\n        <span role=\"alert\">Should be valid email</span>\n      )}\n      <br /><br />\n    </>\n  );\n}\n\nexport default Input;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { setUserSession } from '../../Utils/Common';\nimport { useSignIn } from './../../Hooks/Index';\n// Sections\nimport Input from './../IndexSections/Input';\n\nexport interface ILoginProps {\n  Email: any,\n  Password: any\n}\n\nfunction Login(props: any) {\n\n  const { register, handleSubmit, errors } = useForm();\n  const [ loading, token, user, error, firebaseSignIn ] = useSignIn()\n\n  // handle button click of login form\n  const onSubmit = (data: ILoginProps) => {\n    firebaseSignIn(data.Email, data.Password);\n  }\n\n  // UseEffect\n  React.useEffect(() => {\n    if(!loading && error === \"\") {\n      setUserSession(token, user);\n      props.history.push('/dashboard');\n    }\n  }, [loading, error, token, user, props.history]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div> Login </div> <br />\n      <Input type='text' placeholder=\"Email\" name=\"Email\" validation={register({required: true, pattern: /^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i})} errors={errors} />\n      <Input type='password' placeholder=\"Password\" name=\"Password\" validation={register({required: true, maxLength: 20})} errors={errors} />\n      <input type=\"submit\" value={loading ? 'Loading...' : 'Login'} disabled={loading} /><br />\n      {error && <><br /><small>{error}</small><br /></>}<br />\n    </form>\n  );\n}\n\nexport default Login;"],"sourceRoot":""}