{"version":3,"sources":["Utils/Common.tsx","Constants/apiEndpoints.ts","Hooks/useGetUser.ts","Constants/firebase.ts","Hooks/useSignIn.ts","Hooks/useCreateUser.ts","Utils/PrivateRoute.tsx","Utils/PublicRoute.tsx","Hooks/useVerifyToken.ts","Views/IndexSections/Input.tsx","Views/Containers/Login.tsx","Views/Containers/Dashboard.tsx","Views/Containers/Home.tsx","Components/NavBar/NavBar.tsx","App.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["getToken","sessionStorage","getItem","removeUserSession","removeItem","setUserSession","token","user","setItem","JSON","stringify","API_URL","config","headers","Authorization","ApiEndPoints","createUser","getUserById","verifyIdToken","useGetUser","React","data","setData","loading","setLoading","error","setError","api","axios","create","baseURL","uid","a","get","then","response","catch","console","warn","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","UseSignIn","setUser","setToken","username","password","signInWithEmailAndPassword","ya","message","useCreateUser","result","post","PrivateRoute","Component","component","exact","path","props","render","matchProps","to","pathname","state","from","location","PublicRoute","forceRedirect","redirectTo","useVerifyToken","e","Input","type","name","placeholder","errors","validation","aria-invalid","id","ref","role","Login","useForm","register","handleSubmit","useSignIn","firebaseSignIn","useEffect","history","push","onSubmit","Email","Password","required","pattern","maxLength","value","disabled","Dashboard","userStr","parse","getUser","fetchData","className","firstname","lastname","age","score","onClick","Home","max","min","NavBar","activeClassName","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","ReactDOM","document","getElementById","URL","process","toString","origin","addEventListener","fetch","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cd5fa91b.chunk.js","sourcesContent":["// return the user data from the session storage\nexport const getUser = () => {\n  const userStr = sessionStorage.getItem('user');\n  if (userStr) return JSON.parse(userStr);\n  else return null;\n}\n\n// return the token from the session storage\nexport const getToken = () => {\n  return sessionStorage.getItem('token') || null;\n}\n\n// remove the token and user from the session storage\nexport const removeUserSession = () => {\n  sessionStorage.removeItem('token');\n  sessionStorage.removeItem('user');\n}\n\n// set the token and user from the session storage\nexport const setUserSession = (token: string, user: string) => {\n  sessionStorage.setItem('token', token);\n  sessionStorage.setItem('user', JSON.stringify(user));\n}","const API_URL = 'https://users-l7rh776aha-uc.a.run.app/api'\n\nconst config = {\n  headers: { Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibmFtZSI6IkplbiBKb25lcyIsImlhdCI6MTU5MDExNzY2OH0.Z50ZjBVzVA8l5Lxzjku2q1edyOPboUEOMLOYufsSGm0` }\n};\n\nconst ApiEndPoints = {\n  users: {\n    createUser: 'users',\n    getUserById: 'users/',\n    verifyIdToken: 'users/verifyIdToken/'\n  }\n};\n\nexport {\n  API_URL,\n  ApiEndPoints,\n  config\n};","import * as React from 'react';\nimport axios from \"axios\";\nimport { API_URL, ApiEndPoints, config } from '../Constants/apiEndpoints';\n \nconst useGetUser = () => {\n  const [data, setData] = React.useState<IUser>();\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<string>();\n\n  const api = axios.create({ baseURL: API_URL });\n\n  const fetchData = async (uid: string) => {\n    try {\n      setLoading(true)\n      setError(\"\")\n      await api.get(`${ApiEndPoints.users.getUserById}${uid}`, config)\n      .then(response => {\n        setData(response.data.data)\n      })\n      .catch(error => {\n        setError(\"Error retriving data from database.\")\n      });\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      setLoading(false)\n    }\n  };\n\n  return [loading, data, error, fetchData] as const;\n}\n\ninterface IUser {\n  id: string,\n  documentnumber: string,\n  documenttype: string,\n  firstname: string,\n  lastname: string,\n  email: string,\n  age: string,\n  score: string\n}\n\nexport default useGetUser","import firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyApaIbCPZIEyJVjlNwzUZZDUpHI_KwOOjE\",\n  authDomain: \"sample-microservice-oiga.firebaseapp.com\",\n  projectId: \"sample-microservice-oiga\",\n  storageBucket: \"sample-microservice-oiga.appspot.com\",\n  messagingSenderId: \"913926175112\",\n  appId: \"1:913926175112:web:56d9a596586e0d0528a23d\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth()\n\nexport { auth, firebase as default }","import * as React from 'react';\nimport firebase from './../Constants/firebase';\n\nconst UseSignIn = () => {\n  const [loading, setLoading] = React.useState(false);\n  const [user, setUser] = React.useState<any>();\n  const [token, setToken] = React.useState<string>(\"\");\n  const [error, setError] = React.useState<string>();\n\n  const firebaseSignIn = async (username: string, password: string) => {\n    try {\n      setLoading(true)\n      setError(\"\")\n\n      await firebase.auth().signInWithEmailAndPassword(username, password)\n      .then((response: any) => {\n        setToken(response.user.ya);\n        setUser(response.user);\n      }).catch((error: any) => {\n        if (error != null) setError(error.message);\n        else setError(\"Something went wrong. Please try again later.\");\n      });\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return [loading, token, user, error, firebaseSignIn] as const;\n}\n\nexport default UseSignIn","import * as React from 'react';\nimport axios from \"axios\";\nimport { API_URL, ApiEndPoints, config } from '../Constants/apiEndpoints';\n \nconst useCreateUser = () => {\n  const [result, setData] = React.useState<string>();\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState<string>();\n\n  const api = axios.create({ baseURL: API_URL });\n\n  const createUser = async (data: IUser) => {\n    try {\n      setLoading(true)\n      setError(\"\")\n      await api.post(`${ApiEndPoints.users.createUser}`, data, config)\n      .then(response => {\n        setData(\"Saved succesfully!\")\n      })\n      .catch(error => {\n        setError(\"Error saving to database.\")\n      });\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      setLoading(false)\n    }\n  };\n\n  return [loading, result, error, createUser] as const;\n}\n\ninterface IUser {\n  firstname: string,\n  lastname: string,\n  email: string,\n  age: string,\n  score: string\n}\n\nexport default useCreateUser","import React, { ComponentType } from 'react'\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\n\nimport { getToken } from './Common';\n\ninterface PrivateRouteProps extends RouteProps {\n  component: ComponentType<any>;\n  exact?: any;\n  path: string;\n}\n\nconst PrivateRoute: React.FC<PrivateRouteProps> = ({\n  component: Component,\n  exact,\n  path,\n  ...props\n}) => {\n\n  return (\n    <Route\n      {...props}\n      exact={exact}\n      path={path} \n      render={(matchProps: any) => getToken() ? <Component {...matchProps} /> : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />}\n    />\n  )\n}\n\nexport default PrivateRoute;","import React, { FC, ComponentType } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\n\nimport { getToken } from './Common';\n\ninterface PublicRouteProps extends RouteProps {\n  component: ComponentType<any>;\n  forceRedirect?: boolean;\n  redirectTo?: string;\n  path: string;\n}\n\nconst PublicRoute: FC<PublicRouteProps> = ({\n  component: Component,\n  forceRedirect,\n  redirectTo,\n  path,\n  ...props\n}) => {\n  return (\n    <Route\n      {...props}\n      render={(props) => !getToken() ? <Component {...props} /> : <Redirect to={{ pathname: '/dashboard' }} />}\n    />\n  )\n};\n\nexport default PublicRoute;","import * as React from 'react';\nimport axios from \"axios\";\nimport { API_URL, ApiEndPoints, config } from '../Constants/apiEndpoints';\n\nimport { removeUserSession, setUserSession, getToken } from './../Utils/Index';\n \nconst useVerifyToken = () => {\n  const [loading, setLoading] = React.useState(false);\n\n  const api = axios.create({ baseURL: API_URL });\n\n  const fetchData = () => {\n    try {\n      const token = getToken();\n\n      if (!token) {\n        return;\n      }\n\n      setLoading(true)\n      api.get(`${ApiEndPoints.users.verifyIdToken}${token}`, config)\n      .then(response => {\n        setUserSession(token, response.data.data);\n      })\n      .catch(error => {\n        removeUserSession();\n      });\n    } catch (e) {\n      console.warn(e);\n    } finally {\n      setLoading(false)\n    }\n  };\n\n  return [loading, fetchData] as const;\n}\n\nexport default useVerifyToken","import React from \"react\";\n\nexport interface IInputProps {\n  type: any,\n  name: any,\n  placeholder?: any,\n  errors: any,\n  validation: any\n}\n\nconst Input: React.FC<IInputProps> = ({\n  type,\n  name,\n  placeholder,\n  errors,\n  validation\n}) => {\n\n  return (\n    <>\n      <input \n        type={type}\n        aria-invalid={errors[name] ? \"true\" : \"false\"} \n        placeholder={placeholder}\n        id={name}\n        name={name}\n        ref={validation} \n      /> \n      {errors[name] && errors[name].type === \"required\" && (\n        <span role=\"alert\">This is required</span>\n      )}\n      {errors[name] && errors[name].type === \"maxLength\" && (\n        <span role=\"alert\">Max length exceeded</span>\n      )}\n      {errors[name] && errors[name].type === \"min\" && (\n        <span role=\"alert\">Should be greatter than 0</span>\n      )}\n      {errors[name] && errors[name].type === \"max\" && (\n        <span role=\"alert\">Should be lower than 100</span>\n      )}\n      {errors[name] && errors[name].type === \"pattern\" && (\n        <span role=\"alert\">Should be valid email</span>\n      )}\n      <br /><br />\n    </>\n  );\n}\n\nexport default Input;","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { setUserSession } from '../../Utils/Common';\nimport { useSignIn } from './../../Hooks/Index';\n// Sections\nimport Input from './../IndexSections/Input';\n\nexport interface ILoginProps {\n  Email: any,\n  Password: any\n}\n\nfunction Login(props: any) {\n\n  const { register, handleSubmit, errors } = useForm();\n  const [ loading, token, user, error, firebaseSignIn ] = useSignIn()\n\n  // handle button click of login form\n  const onSubmit = (data: ILoginProps) => {\n    firebaseSignIn(data.Email, data.Password);\n  }\n\n  // UseEffect\n  React.useEffect(() => {\n    if(!loading && error === \"\") {\n      setUserSession(token, user);\n      props.history.push('/dashboard');\n    }\n  }, [loading, error, token, user, props.history]);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div> Login </div> <br />\n      <Input type='text' placeholder=\"Email\" name=\"Email\" validation={register({required: true, pattern: /^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i})} errors={errors} />\n      <Input type='password' placeholder=\"Password\" name=\"Password\" validation={register({required: true, maxLength: 20})} errors={errors} />\n      <input type=\"submit\" value={loading ? 'Loading...' : 'Login'} disabled={loading} /><br />\n      {error && <><br /><small>{error}</small><br /></>}<br />\n    </form>\n  );\n}\n\nexport default Login;","\nimport React from 'react';\nimport { getUser, removeUserSession } from '../../Utils/Index';\nimport { useGetUser } from './../../Hooks/Index';\n\nfunction Dashboard(props: any) {\n  const user = getUser();\n\n  // handle click event of logout button\n  const handleLogout = () => {\n    removeUserSession();\n    props.history.push('/login');\n  }\n\n  const [ loading, data, error, fetchData ] = useGetUser();\n\n  React.useEffect(() => {\n    fetchData(user.uid);\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading) {\n    return <div className=\"content\">Retriving data...</div>\n  }\n\n  if (error !== \"\") {\n    return <div className=\"content\">{error && <><br /><small>{error}</small><br /></>}<br /></div>\n  }\n\n  return (\n    <div>\n      Welcome {data!.firstname} {data!.lastname}!<br /><br />\n      Age: {data!.age}<br /><br />\n      Score: {data!.score}<br /><br />\n      <input type=\"button\" onClick={handleLogout} value=\"Logout\" />\n    </div>\n  );\n}\n\nexport default Dashboard;","import React from 'react';\nimport { useForm } from 'react-hook-form';\n\n// Sections\nimport Input from './../IndexSections/Input'\n\n// Hooks\nimport { useCreateUser } from './../../Hooks/Index';\n\nfunction Home() {\n  const [ loading, result, error, createUser ] = useCreateUser()\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = (data: any) => {\n    createUser(data)\n  };\n\n  if (loading) {\n    return <div className=\"content\">Saving data...</div>\n  }\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div>\n        Welcome to the Register Page! <br /> <br />\n      </div>\n      <Input type='text' placeholder=\"First Name\" name=\"firstname\" validation={register({required: true, maxLength: 30})} errors={errors} />\n      <Input type='text' placeholder=\"Last Name\" name=\"lastname\" validation={register({required: true, maxLength: 30})} errors={errors} />\n      <Input type='text' placeholder=\"Email\" name=\"email\" validation={register({required: true, pattern: /^[\\w-\\\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/i})} errors={errors} />\n      <Input type='text' placeholder=\"Age\" name=\"age\" validation={register({required: true, max: 100, min: 0})} errors={errors} />\n      <Input type='text' placeholder=\"Score\" name=\"score\" validation={register({required: true, max: 100, min: 0})} errors={errors} />\n      <Input type='password' placeholder=\"Password\" name=\"password\" validation={register({required: true, maxLength: 20})} errors={errors} />\n      <input type=\"submit\" />\n      {error && <><br /><small>{error}</small><br /></>}<br />\n      {result && <><br /><h2>{result}</h2><br /></>}<br />\n    </form>\n  );\n}\nexport default Home;","import React from \"react\";\nimport { NavLink } from 'react-router-dom';\n\nexport interface INavBarProps { \n  props?: any\n}\n\nconst NavBar: React.FC<INavBarProps> = ({ \n  props\n}) => {\n  return (\n    <div className=\"header\">\n      <NavLink exact activeClassName=\"active\" to=\"/\">Home</NavLink>\n      <NavLink activeClassName=\"active\" to=\"/login\">Login</NavLink><small>(Access without token only)</small>\n      <NavLink activeClassName=\"active\" to=\"/dashboard\">Dashboard</NavLink><small>(Access with token only)</small>\n    </div>\n  );\n}\n\nexport default NavBar;","import React, { useEffect } from 'react';\nimport { Switch, Route, BrowserRouter, Redirect } from 'react-router-dom';\n\n// core components\nimport Login from './Views/Containers/Login';\nimport Dashboard from './Views/Containers/Dashboard';\nimport Home from './Views/Containers/Home';\n\nimport { NavBar } from './Components/Index'\n\n// Routes\nimport { PrivateRoute, PublicRoute } from './Utils/Index';\n\n// Hooks\nimport { useVerifyToken } from './Hooks/Index';\n\nfunction App() {\n\n  const [ loading, fetchData ] = useVerifyToken()\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  if (loading) {\n    return <div className=\"content\">Checking Authentication...</div>\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <div>\n          <NavBar />\n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/index\" component={Home} />\n              <PublicRoute path=\"/login\" component={Login} />\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n              <Redirect from=\"/\" to=\"/index\" />\n            </Switch>\n          </div>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport default function register() {\n  if (\"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString(),\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\",\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log(\"New content is available; please refresh.\");\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log(\"Content is cached for offline use.\");\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Assets/css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport registerServiceWorker from \"./serviceWorker\";\n\nReactDOM.render( <App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\nregisterServiceWorker();"],"sourceRoot":""}